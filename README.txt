##2025_sc_iso_paper
	Analysis suite accompanying the manuscript "Single cell long read sequencing of the experience-induced transcriptome"
	--Sheridan Cavalier 2025

## Description
Scripts for processing ONT reads generated by 10X Genomics and R2C2 library preparation.
# READ PROCESSING AND SORTING
1. Concatameric ONT reads generated by R2C2 are filtered and deconcatenated into consensus reads.
2. 10X barcodes and UMI sequences are determined for each consensus read that has the appropriate 10X adapters.
3. Barcodes are demultiplexed first by exact matching to 10X whitelist, a barcode shortlist is generated from these matched barcodes.
	Reads that don't have exact barcode matches are categorized as belonging to a barcode in the shortlist if L < 3.
4. Reads are mapped to the given reference genome with Minimap2 and assigned to a genomic feature with FeatureCounts.
	Reads with the same barcode that map to the same genomic feature are collapsed if their UMIs are within L < 2.
5. Barcode rank is determined by UMI count and a percentile-based strategy is used to determine cell barcodes above background. 
# GENERATING GENE COUNT MATRIX
6. Reads within each barcode are mapped to the given reference genome with Minimap2. 
	Each read is assigned to a genomic feature with FeatureCounts based on its primary alignment.
7. Gene counts per barcode are formatted for Seurat into three files: 
	barcodes.tsv, features.tsv, and matrix.mtx
# GENERATING ISOFORM COUNT MATRIX
8. Reads within each barcode are mapped to the given reference transcriptome with Minimap2. 
9. Isoform quantification with Salmon is performed on resulting transcriptome alignment files. 
10. Integer count values (raw) reported by Salmon for each isoform are recorded for each barcode. 
	Isoform counts per barcode are formatted for Seurat input. 
  
##Dependencies 
environment.yaml file provided
conk SW aligner provided

##Usage (run in order listed)
1. C3POa_sc.py
	Performs C3POa on Nanopore reads. 
	C3POa uses splint alignment to determine subread boundaries on concatemeric R2C2 reads. 
	Subreads are aligned and polished with Racon into resulting consensus reads. Use C3POa-multi.py for files > 5M reads. 
 
./C3POa.py -i input.fastq blahblab

2. C3POa_postprocessing.py
	Filters and orients consensus reads 5' to 3' via 10X adapter alignment.
	Creates separate barcode/UMI file storing the last 28bp of each read.
	This script can be used on any barcoded long reads with universal adapters if sequences are provided.

./C3POa_postprocessing.py -i 

3. detBarcodes.py
	Reads with an exact match to a barcode in the provided 10X whitelist are counted. 
	Barcode shortlist is generated from barcodes with exact matches.
	Typically 85+% of reads from postprocessing have exact matches. 

./detBarcodes.py -i

4. Demux_by_kmer.py
	Reads without exact barcode matches are assigned to a barcode in the shortlist if L < 3. 
  
./Demux_by_kmer.py -i 

5. match_fastas.py
   #this needs to just be combined with demux nano (now make barcode files)as the first step

5. make_barcode_files.py
	Aggregates reads into fastq files by barcode and returns a list of barcodes with associated UMI counts (non collapsed).

/.make_barcode_files.py -i 

6. MapAssignSort.py
	Maps reads to reference genome. Reads are assigned to the genomic feature matching their primary alignment (FeatureCounts).
	Reads in each barcode file are sorted by gene feature for quick UMI collapsing. 

./UMI_Collapse_2022/MapAssignSort.py -i

7. UMI_Collapse.py
	Reads with the same barcode that map to the same genomic feature are collapsed if UMIs L < 2.

./UMI_Collapse_2022/UMI_Collapse.py -i

8. UMIsBarcodes.py
	Barcodes are ranked by number of UMIs. Barcodes with a UMI count at least 1/10 that of the barcode in the 99th percentile are considered cells.
	An extra ten percent of targeted cells are included. 
#### need to integrate reorderBC.py into this 

9. map_cells.py (formerly reFeatureCounts_for_countsmtx) ####integrate feature counts command into this!! 
	Maps reads to reference genome and saves cell sam files in a directory for FeatureCounts.
	Runs FeatureCounts on cell sam directory to generate file storing features per cell. 
